#include <LiquidCrystal.h>
#include <util/delay.h>

LiquidCrystal lcd(A0, A1, A2, A3, A4, A5);

char ocitaj_taster()
{
  char taster = 0;
  unsigned char row;
  
  MCUCR &= ~0x10;
  PORTD = 0x0f; 
  
  for(row = 0x80; row != 0x08; row >>= 1)
  {
    DDRD = row;
	_delay_ms(2);
    
    switch(row | ((~PIND) & 0x0f))
    {
      case 0x88:
      	taster = '1'; break;
      case 0x84:
      	taster = '2'; break;
      case 0x82:
      	taster = '3'; break;
      case 0x81:
      	taster = 'A'; break;
		
	  case 0x48:
      	taster = '4'; break;
      case 0x44:
      	taster = '5'; break;
      case 0x42:
      	taster = '6'; break;
      case 0x41:
      	taster = 'B'; break;
		
	  case 0x28:
      	taster = '7'; break;
      case 0x24:
      	taster = '8'; break;
      case 0x22:
      	taster = '9'; break;
      case 0x21:
      	taster = 'C'; break;
		
	  case 0x18:
      	taster = '*'; break;
      case 0x14:
      	taster = '0'; break;
      case 0x12:
      	taster = '#'; break;
      case 0x11:
      	taster = 'D'; break;
    }
  }
  
  return taster;
}

int main()
{
  	char operand1[16],operand2[16];
        char izraz[16];
        int i=0,i1=0,i2 = 0;  
        int operacija =0;
        int prvi_broj=0,drugi_broj = 0;
        int rezultat = 0;
  
  
  	lcd.begin(16, 2);
	int trenutni,sledeci = 0;
  
  
	while(1)
    { 
      
     while(1)
     {
	  	char taster = ocitaj_taster();
       
      	if (trenutni == 0 && sledeci != 0)
      		{
        		lcd.print(taster);
      			_delay_ms(500);
        		izraz[i] = taster;
          		++i;
        
     		 }
      
     	 trenutni = sledeci;
      	sledeci = ocitaj_taster();
       
         if(taster == '*')
           break;
     }
      
      izraz[i] = '\0';
       
       
      while(izraz[i1] != 'A' && izraz[i1] != 'B' && izraz[i1] != 'C' && izraz[i1] != 'D')
      {
      	operand1[i1] = izraz[i1];
        ++i1;
      
      }
      
        operand1[i1] = '\0';
      
      	operacija = i1;  // indeks niza na kom se unese operacija
      	++i1;
      
      	while(izraz[i1] != '*')
        {
        	operand2[i2] = izraz[i1];
          	++i2;
          	++i1;
        
        }
      operand2[i2] = '\0';
      
      
      prvi_broj = atoi(operand1);
      drugi_broj = atoi(operand2);
      
      switch(izraz[operacija])
      {
      case 'A' :
        rezultat = prvi_broj + drugi_broj;
        izraz[operacija] = '+';
        break;
      case 'B' :
        rezultat = prvi_broj - drugi_broj;
        izraz[operacija] = '-';
      	break;
      case 'C' :
        rezultat = prvi_broj * drugi_broj;
        izraz[operacija] = '*';
        break;
      case 'D' :
        rezultat = prvi_broj / drugi_broj;
        izraz[operacija] = '/';
      	break;
      }
      
      
 	_delay_ms(2000);
      
      
      lcd.setCursor(0,1);
      lcd.print(prvi_broj);
      lcd.print(izraz[operacija]);
      lcd.print(drugi_broj);
      lcd.print("=");
      lcd.print(rezultat);
      
     
      
  
    }
  
  	return 0;
}